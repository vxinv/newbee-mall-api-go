// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameTzSku = "tz_sku"

// TzSku 单品SKU表
type TzSku struct {
	SkuID        uint64    `gorm:"column:sku_id;type:bigint(20) unsigned;primaryKey;autoIncrement:true;comment:单品ID" json:"sku_id"`       // 单品ID
	ProdID       uint64    `gorm:"column:prod_id;type:bigint(20) unsigned;not null;index:prod_id,priority:1;comment:商品ID" json:"prod_id"` // 商品ID
	Properties   *string   `gorm:"column:properties;type:varchar(2000);comment:销售属性组合字符串 格式是p1:v1;p2:v2" json:"properties"`               // 销售属性组合字符串 格式是p1:v1;p2:v2
	OriPrice     *float64  `gorm:"column:ori_price;type:decimal(15,2);comment:原价" json:"ori_price"`                                       // 原价
	Price        *float64  `gorm:"column:price;type:decimal(15,2);comment:价格" json:"price"`                                               // 价格
	Stocks       int32     `gorm:"column:stocks;type:int(11);not null;comment:商品在付款减库存的状态下，该sku上未付款的订单数量" json:"stocks"`                  // 商品在付款减库存的状态下，该sku上未付款的订单数量
	ActualStocks *int32    `gorm:"column:actual_stocks;type:int(11);comment:实际库存" json:"actual_stocks"`                                   // 实际库存
	UpdateTime   time.Time `gorm:"column:update_time;type:datetime;not null;comment:修改时间" json:"update_time"`                             // 修改时间
	RecTime      time.Time `gorm:"column:rec_time;type:datetime;not null;comment:记录时间" json:"rec_time"`                                   // 记录时间
	PartyCode    *string   `gorm:"column:party_code;type:varchar(100);comment:商家编码" json:"party_code"`                                    // 商家编码
	ModelID      *string   `gorm:"column:model_id;type:varchar(100);comment:商品条形码" json:"model_id"`                                       // 商品条形码
	Pic          *string   `gorm:"column:pic;type:varchar(500);comment:sku图片" json:"pic"`                                                 // sku图片
	SkuName      *string   `gorm:"column:sku_name;type:varchar(120);comment:sku名称" json:"sku_name"`                                       // sku名称
	ProdName     *string   `gorm:"column:prod_name;type:varchar(255);comment:商品名称" json:"prod_name"`                                      // 商品名称
	Version      int32     `gorm:"column:version;type:int(11);not null;comment:版本号" json:"version"`                                       // 版本号
	Weight       *float64  `gorm:"column:weight;type:double;comment:商品重量" json:"weight"`                                                  // 商品重量
	Volume       *float64  `gorm:"column:volume;type:double;comment:商品体积" json:"volume"`                                                  // 商品体积
	Status       *int32    `gorm:"column:status;type:tinyint(2);default:1;comment:0 禁用 1 启用" json:"status"`                               // 0 禁用 1 启用
	IsDelete     *int32    `gorm:"column:is_delete;type:tinyint(2);comment:0 正常 1 已被删除" json:"is_delete"`                                 // 0 正常 1 已被删除
}

// TableName TzSku's table name
func (*TzSku) TableName() string {
	return TableNameTzSku
}
